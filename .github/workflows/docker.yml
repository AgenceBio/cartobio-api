name: Docker Image CI

on:
  push:
    paths-ignore:
    - 'docs/**'
    - 'bin/**'
    branches:
    - '**'
    tags:
    - v*

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.publish.outputs.tag }}

    steps:
    - uses: actions/checkout@v3
    - run: docker build -t agencebio/cartobio-api .

    - name: Test the Docker image
      run: docker run -e NOTIFICATIONS_AB_CARTOBIO_USER -e NOTIFICATIONS_AB_CARTOBIO_PASSWORD -e NOTIFICATIONS_AB_SSO_CLIENT_ID -e NOTIFICATIONS_AB_SSO_CLIENT_SECRET -e NOTIFICATIONS_AB_ENDPOINT -e CARTOBIO_JWT_SECRET -e CI agencebio/cartobio-api npm test
      env:
        CI: true
        NOTIFICATIONS_AB_ENDPOINT: https://preprod-notifications.agencebio.org:444
        CARTOBIO_JWT_SECRET: "${{ secrets.CARTOBIO_JWT_SECRET }}"
        NOTIFICATIONS_AB_SSO_CLIENT_ID: "test"
        NOTIFICATIONS_AB_SSO_CLIENT_SECRET: "test"

    - name: Publish to Docker Hub
      uses: jerray/publish-docker-action@v1.0.5
      id: publish
      if: startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/master'
      with:
        repository: agencebio/cartobio-api
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
        auto_tag: true

  deploy-staging:
    needs: [build]
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    environment: staging
    runs-on: ubuntu-latest
    steps:
    - uses: garygrossgarten/github-action-ssh@0.7.0
      with:
        host: ${{ secrets.AGENCEBIO_SSH_HOST }}
        username: ${{ secrets.AGENCEBIO_SSH_USERNAME }}
        privateKey: ${{ secrets.AGENCEBIO_SSH_PRIVATE_KEY }}
        command: |
          docker pull ${{ needs.build.outputs.tag }} \
          && docker stop cartobio-api-staging \
          && docker container rm cartobio-api-staging \
          && docker run -d --restart unless-stopped \
            -p 127.0.0.1:7500:8000 \
            --env-file=.env.cartobio-api-staging \
            --add-host=postgres:$(docker inspect -f '{{.NetworkSettings.IPAddress}}' postgres-staging) \
            --name cartobio-api-staging \
            ${{ needs.build.outputs.tag }}

  deploy-production:
    needs: [build]
    if: startsWith(github.ref, 'refs/tags/')
    environment: production
    runs-on: ubuntu-latest
    steps:
    - uses: garygrossgarten/github-action-ssh@0.7.0
      with:
        host: ${{ secrets.AGENCEBIO_SSH_HOST }}
        username: ${{ secrets.AGENCEBIO_SSH_USERNAME }}
        privateKey: ${{ secrets.AGENCEBIO_SSH_PRIVATE_KEY }}
        command: |
          docker pull ${{ needs.build.outputs.tag }} \
          && docker stop cartobio-api-production \
          && docker container rm cartobio-api-production \
          && docker run -d --restart unless-stopped \
            -p 127.0.0.1:8000:8000 \
            --env-file=.env.cartobio-api-production \
            --add-host=postgres:$(docker inspect -f '{{.NetworkSettings.IPAddress}}' postgres-production) \
            --name cartobio-api-production \
            ${{ needs.build.outputs.tag }}
